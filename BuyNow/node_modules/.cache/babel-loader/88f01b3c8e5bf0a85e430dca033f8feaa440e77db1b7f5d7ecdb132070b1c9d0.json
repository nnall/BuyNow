{"ast":null,"code":"var _jsxFileName = \"/Users/nicknall/Documents/HolmesMotors/BuyNow/BuyNow/src/components/CustomHeader.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomHeader = ({\n  selectedDate,\n  decreaseMonth,\n  increaseMonth,\n  onChangeYear,\n  minDate,\n  maxDate\n}) => {\n  _s();\n  const [yearInput, setYearInput] = useState(selectedDate ? selectedDate.getFullYear() : \"\");\n  const handleYearChange = event => {\n    const newYear = parseInt(event.target.value);\n    setYearInput(newYear);\n    onChangeYear(newYear); // Update the selectedDate state in the parent component\n  };\n\n  const getMonthName = date => {\n    if (date) {\n      return date.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n    } else {\n      // If no date is selected, use increaseMonth to get the next month from the current month\n      const nextMonth = new Date(); // Call increaseMonth without any arguments to get the next month\n      nextMonth.setMonth(nextMonth.getMonth() + 1);\n      return nextMonth.toLocaleString(\"default\", {\n        month: \"long\"\n      });\n    }\n  };\n\n  // checks if 'selectedDate' exists? ()\n  const formattedDate = selectedDate ? selectedDate.toLocaleString(\"default\", {\n    month: \"long\",\n    year: \"numeric\"\n  }) : getMonthName(new Date());\n  const currentYear = new Date().getFullYear();\n\n  // Generate a list of selectable years\n  const years = [];\n  const minYear = minDate ? minDate.getFullYear() : currentYear - 100;\n  const maxYear = maxDate ? maxDate.getFullYear() : currentYear;\n  for (let i = minYear; i <= maxYear; i++) {\n    years.push(i);\n  }\n\n  // for (let i = currentYear - 100; i <= currentYear; i++) {\n  //   years.push(i);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-header\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decreaseMonth,\n      children: \"Previous Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: formattedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseMonth,\n      children: \"Next Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: yearInput,\n      onChange: handleYearChange\n      // style={{ width: \"60px\" }}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomHeader, \"EbNGy5r3lZXYFLtvNhUIQOKr4Ho=\");\n_c = CustomHeader;\nexport default CustomHeader;\nvar _c;\n$RefreshReg$(_c, \"CustomHeader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CustomHeader","selectedDate","decreaseMonth","increaseMonth","onChangeYear","minDate","maxDate","_s","yearInput","setYearInput","getFullYear","handleYearChange","event","newYear","parseInt","target","value","getMonthName","date","toLocaleString","month","nextMonth","Date","setMonth","getMonth","formattedDate","year","currentYear","years","minYear","maxYear","i","push","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["/Users/nicknall/Documents/HolmesMotors/BuyNow/BuyNow/src/components/CustomHeader.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst CustomHeader = ({\n  selectedDate,\n  decreaseMonth,\n  increaseMonth,\n  onChangeYear,\n  minDate,\n  maxDate,\n}) => {\n  const [yearInput, setYearInput] = useState(\n    selectedDate ? selectedDate.getFullYear() : \"\"\n  );\n\n  const handleYearChange = (event) => {\n    const newYear = parseInt(event.target.value);\n    setYearInput(newYear);\n    onChangeYear(newYear); // Update the selectedDate state in the parent component\n  };\n\n  const getMonthName = (date) => {\n    if (date) {\n      return date.toLocaleString(\"default\", { month: \"long\" });\n    } else {\n      // If no date is selected, use increaseMonth to get the next month from the current month\n      const nextMonth = new Date(); // Call increaseMonth without any arguments to get the next month\n      nextMonth.setMonth(nextMonth.getMonth() + 1);\n      return nextMonth.toLocaleString(\"default\", { month: \"long\" });\n    }\n  };\n\n  // checks if 'selectedDate' exists? ()\n  const formattedDate = selectedDate\n    ? selectedDate.toLocaleString(\"default\", { month: \"long\", year: \"numeric\" })\n    : getMonthName(new Date());\n\n  const currentYear = new Date().getFullYear();\n\n  // Generate a list of selectable years\n  const years = [];\n  const minYear = minDate ? minDate.getFullYear() : currentYear - 100;\n  const maxYear = maxDate ? maxDate.getFullYear() : currentYear;\n  for (let i = minYear; i <= maxYear; i++) {\n    years.push(i);\n  }\n\n  // for (let i = currentYear - 100; i <= currentYear; i++) {\n  //   years.push(i);\n  // }\n\n  return (\n    <div className=\"custom-header\">\n      <button onClick={decreaseMonth}>Previous Month</button>\n      <span>\n        {formattedDate}\n        {/* {yearInput} */}\n      </span>\n      <button onClick={increaseMonth}>Next Month</button>\n      <input\n        type=\"number\"\n        value={yearInput}\n        onChange={handleYearChange}\n        // style={{ width: \"60px\" }}\n      />\n    </div>\n  );\n};\n\nexport default CustomHeader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}